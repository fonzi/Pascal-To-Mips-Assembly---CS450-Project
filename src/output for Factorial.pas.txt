run:
LEXEME: program TOKEN: [PROGRAM]
LEXEME: Factorial TOKEN: [ID]
LEXEME: ; TOKEN: [SEMI_COLON]
LEXEME: var TOKEN: [VAR]
LEXEME: i TOKEN: [ID]
LEXEME: x TOKEN: [ID]
LEXEME: : TOKEN: [COLON]
LEXEME: integer TOKEN: [INTEGER]
LEXEME: ; TOKEN: [SEMI_COLON]
LEXEME: fact TOKEN: [ID]
LEXEME: : TOKEN: [COLON]
LEXEME: real TOKEN: [REAL]
LEXEME: ; TOKEN: [SEMI_COLON]
LEXEME: begin TOKEN: [BEGIN]
LEXEME: writeln TOKEN: [ID]
LEXEME: ( TOKEN: [LEFT_PARENTHESIS]
LEXEME: Enter TOKEN: [ID]
LEXEME: the TOKEN: [ID]
LEXEME: value TOKEN: [ID]
LEXEME: of TOKEN: [OF]
LEXEME: the TOKEN: [ID]
LEXEME: factorial TOKEN: [ID]
LEXEME: ) TOKEN: [RIGHT_PARENTHESIS]
LEXEME: ; TOKEN: [SEMI_COLON]
LEXEME: readln TOKEN: [ID]
LEXEME: ( TOKEN: [LEFT_PARENTHESIS]
LEXEME: x TOKEN: [ID]
LEXEME: ) TOKEN: [RIGHT_PARENTHESIS]
LEXEME: ; TOKEN: [SEMI_COLON]
LEXEME: fact TOKEN: [ID]
LEXEME: := TOKEN: [COLON_EQUALS]
LEXEME: 1 TOKEN: [NUMBER]
LEXEME: ; TOKEN: [SEMI_COLON]
LEXEME: for TOKEN: [ID]
LEXEME: i TOKEN: [ID]
LEXEME: := TOKEN: [COLON_EQUALS]
LEXEME: 1 TOKEN: [NUMBER]
LEXEME: to TOKEN: [ID]
LEXEME: x TOKEN: [ID]
LEXEME: do TOKEN: [DO]
LEXEME: fact TOKEN: [ID]
LEXEME: := TOKEN: [COLON_EQUALS]
LEXEME: fact TOKEN: [ID]
LEXEME: * TOKEN: [MULTIPLY]
LEXEME: i TOKEN: [ID]
LEXEME: ; TOKEN: [SEMI_COLON]
LEXEME: writeln TOKEN: [ID]
LEXEME: ( TOKEN: [LEFT_PARENTHESIS]
LEXEME: x TOKEN: [ID]
LEXEME: is TOKEN: [ID]
LEXEME: fact TOKEN: [ID]
LEXEME: ) TOKEN: [RIGHT_PARENTHESIS]
LEXEME: ; TOKEN: [SEMI_COLON]
LEXEME: readln TOKEN: [ID]
LEXEME: ; TOKEN: [SEMI_COLON]
LEXEME: end TOKEN: [END]
LEXEME: . TOKEN: [PERIOD]
BUILD SUCCESSFUL (total time: 0 seconds)
